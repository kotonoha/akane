/*
 * Copyright 2012-2016 eiennohito (Tolmachev Arseny)
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

package mecab;
import org.bridj.BridJ;
import org.bridj.CRuntime;
import org.bridj.Pointer;
import org.bridj.ann.Library;
import org.bridj.ann.Ptr;
import org.bridj.ann.Runtime;
/**
 * Wrapper for library <b>mecab</b><br>
 * This file was autogenerated by <a href="http://jnaerator.googlecode.com/">JNAerator</a>,<br>
 * a tool written by <a href="http://ochafik.com/">Olivier Chafik</a> that <a href="http://code.google.com/p/jnaerator/wiki/CreditsAndLicense">uses a few opensource projects.</a>.<br>
 * For help, please visit <a href="http://nativelibs4java.googlecode.com/">NativeLibs4Java</a> or <a href="http://bridj.googlecode.com/">BridJ</a> .
 */
@Library("mecab")
@Runtime(CRuntime.class)
public class MecabLibrary {
	static {
		BridJ.register();
	}
	public static final int MECAB_NOR_NODE = 0;
	public static final int MECAB_UNK_NODE = 1;
	public static final int MECAB_BOS_NODE = 2;
	public static final int MECAB_EOS_NODE = 3;
	public static final int MECAB_EON_NODE = 4;
	public static final int MECAB_SYS_DIC = 0;
	public static final int MECAB_USR_DIC = 1;
	public static final int MECAB_UNK_DIC = 2;
	public static final int MECAB_ONE_BEST = 1;
	public static final int MECAB_NBEST = 2;
	public static final int MECAB_PARTIAL = 4;
	public static final int MECAB_MARGINAL_PROB = 8;
	public static final int MECAB_ALTERNATIVE = 16;
	public static final int MECAB_ALL_MORPHS = 32;
	public static final int MECAB_ALLOCATE_SENTENCE = 64;
	public static final int MECAB_ANY_BOUNDARY = 0;
	public static final int MECAB_TOKEN_BOUNDARY = 1;
	public static final int MECAB_INSIDE_TOKEN = 2;
	/**
	 * Original signature : <code>mecab_t* mecab_new(int, char**)</code><br>
	 * <i>native declaration : line 333</i>
	 */
	public static native Pointer<MecabLibrary.mecab_t > mecab_new(int argc, Pointer<Pointer<Byte > > argv);
	/**
	 * Original signature : <code>mecab_t* mecab_new2(const char*)</code><br>
	 * <i>native declaration : line 338</i>
	 */
	public static native Pointer<MecabLibrary.mecab_t > mecab_new2(Pointer<Byte > arg);
	/**
	 * Original signature : <code>char* mecab_version()</code><br>
	 * <i>native declaration : line 343</i>
	 */
	public static native Pointer<Byte > mecab_version();
	/**
	 * Original signature : <code>char* mecab_strerror(mecab_t*)</code><br>
	 * <i>native declaration : line 348</i>
	 */
	public static native Pointer<Byte > mecab_strerror(Pointer<MecabLibrary.mecab_t > mecab);
	/**
	 * Original signature : <code>void mecab_destroy(mecab_t*)</code><br>
	 * <i>native declaration : line 353</i>
	 */
	public static native void mecab_destroy(Pointer<MecabLibrary.mecab_t > mecab);
	/**
	 * Original signature : <code>int mecab_get_partial(mecab_t*)</code><br>
	 * <i>native declaration : line 358</i>
	 */
	public static native int mecab_get_partial(Pointer<MecabLibrary.mecab_t > mecab);
	/**
	 * Original signature : <code>void mecab_set_partial(mecab_t*, int)</code><br>
	 * <i>native declaration : line 363</i>
	 */
	public static native void mecab_set_partial(Pointer<MecabLibrary.mecab_t > mecab, int partial);
	/**
	 * Original signature : <code>float mecab_get_theta(mecab_t*)</code><br>
	 * <i>native declaration : line 368</i>
	 */
	public static native float mecab_get_theta(Pointer<MecabLibrary.mecab_t > mecab);
	/**
	 * Original signature : <code>void mecab_set_theta(mecab_t*, float)</code><br>
	 * <i>native declaration : line 373</i>
	 */
	public static native void mecab_set_theta(Pointer<MecabLibrary.mecab_t > mecab, float theta);
	/**
	 * Original signature : <code>int mecab_get_lattice_level(mecab_t*)</code><br>
	 * <i>native declaration : line 378</i>
	 */
	public static native int mecab_get_lattice_level(Pointer<MecabLibrary.mecab_t > mecab);
	/**
	 * Original signature : <code>void mecab_set_lattice_level(mecab_t*, int)</code><br>
	 * <i>native declaration : line 383</i>
	 */
	public static native void mecab_set_lattice_level(Pointer<MecabLibrary.mecab_t > mecab, int level);
	/**
	 * Original signature : <code>int mecab_get_all_morphs(mecab_t*)</code><br>
	 * <i>native declaration : line 388</i>
	 */
	public static native int mecab_get_all_morphs(Pointer<MecabLibrary.mecab_t > mecab);
	/**
	 * Original signature : <code>void mecab_set_all_morphs(mecab_t*, int)</code><br>
	 * <i>native declaration : line 393</i>
	 */
	public static native void mecab_set_all_morphs(Pointer<MecabLibrary.mecab_t > mecab, int all_morphs);
	/**
	 * Original signature : <code>int mecab_parse_lattice(mecab_t*, mecab_lattice_t*)</code><br>
	 * <i>native declaration : line 398</i>
	 */
	public static native int mecab_parse_lattice(Pointer<MecabLibrary.mecab_t > mecab, Pointer<MecabLibrary.mecab_lattice_t > lattice);
	/**
	 * Original signature : <code>char* mecab_sparse_tostr(mecab_t*, const char*)</code><br>
	 * <i>native declaration : line 403</i>
	 */
	public static native Pointer<Byte > mecab_sparse_tostr(Pointer<MecabLibrary.mecab_t > mecab, Pointer<Byte > str);
	/**
	 * Original signature : <code>char* mecab_sparse_tostr2(mecab_t*, const char*, size_t)</code><br>
	 * <i>native declaration : line 408</i>
	 */
	public static native Pointer<Byte > mecab_sparse_tostr2(Pointer<MecabLibrary.mecab_t > mecab, Pointer<Byte > str, @Ptr long len);
	/**
	 * Original signature : <code>char* mecab_sparse_tostr3(mecab_t*, const char*, size_t, char*, size_t)</code><br>
	 * <i>native declaration : line 413</i>
	 */
	public static native Pointer<Byte > mecab_sparse_tostr3(Pointer<MecabLibrary.mecab_t > mecab, Pointer<Byte > str, @Ptr long len, Pointer<Byte > ostr, @Ptr long olen);
	/**
	 * Original signature : <code>mecab_node_t* mecab_sparse_tonode(mecab_t*, const char*)</code><br>
	 * <i>native declaration : line 419</i>
	 */
	public static native Pointer<mecab_node_t > mecab_sparse_tonode(Pointer<MecabLibrary.mecab_t > mecab, Pointer<Byte > charPtr1);
	/**
	 * Original signature : <code>mecab_node_t* mecab_sparse_tonode2(mecab_t*, const char*, size_t)</code><br>
	 * <i>native declaration : line 424</i>
	 */
	public static native Pointer<mecab_node_t > mecab_sparse_tonode2(Pointer<MecabLibrary.mecab_t > mecab, Pointer<Byte > charPtr1, @Ptr long size_t1);
	/**
	 * Original signature : <code>char* mecab_nbest_sparse_tostr(mecab_t*, size_t, const char*)</code><br>
	 * <i>native declaration : line 429</i>
	 */
	public static native Pointer<Byte > mecab_nbest_sparse_tostr(Pointer<MecabLibrary.mecab_t > mecab, @Ptr long N, Pointer<Byte > str);
	/**
	 * Original signature : <code>char* mecab_nbest_sparse_tostr2(mecab_t*, size_t, const char*, size_t)</code><br>
	 * <i>native declaration : line 434</i>
	 */
	public static native Pointer<Byte > mecab_nbest_sparse_tostr2(Pointer<MecabLibrary.mecab_t > mecab, @Ptr long N, Pointer<Byte > str, @Ptr long len);
	/**
	 * Original signature : <code>char* mecab_nbest_sparse_tostr3(mecab_t*, size_t, const char*, size_t, char*, size_t)</code><br>
	 * <i>native declaration : line 440</i>
	 */
	public static native Pointer<Byte > mecab_nbest_sparse_tostr3(Pointer<MecabLibrary.mecab_t > mecab, @Ptr long N, Pointer<Byte > str, @Ptr long len, Pointer<Byte > ostr, @Ptr long olen);
	/**
	 * Original signature : <code>int mecab_nbest_init(mecab_t*, const char*)</code><br>
	 * <i>native declaration : line 447</i>
	 */
	public static native int mecab_nbest_init(Pointer<MecabLibrary.mecab_t > mecab, Pointer<Byte > str);
	/**
	 * Original signature : <code>int mecab_nbest_init2(mecab_t*, const char*, size_t)</code><br>
	 * <i>native declaration : line 452</i>
	 */
	public static native int mecab_nbest_init2(Pointer<MecabLibrary.mecab_t > mecab, Pointer<Byte > str, @Ptr long len);
	/**
	 * Original signature : <code>char* mecab_nbest_next_tostr(mecab_t*)</code><br>
	 * <i>native declaration : line 457</i>
	 */
	public static native Pointer<Byte > mecab_nbest_next_tostr(Pointer<MecabLibrary.mecab_t > mecab);
	/**
	 * Original signature : <code>char* mecab_nbest_next_tostr2(mecab_t*, char*, size_t)</code><br>
	 * <i>native declaration : line 462</i>
	 */
	public static native Pointer<Byte > mecab_nbest_next_tostr2(Pointer<MecabLibrary.mecab_t > mecab, Pointer<Byte > ostr, @Ptr long olen);
	/**
	 * Original signature : <code>mecab_node_t* mecab_nbest_next_tonode(mecab_t*)</code><br>
	 * <i>native declaration : line 467</i>
	 */
	public static native Pointer<mecab_node_t > mecab_nbest_next_tonode(Pointer<MecabLibrary.mecab_t > mecab);
	/**
	 * Original signature : <code>char* mecab_format_node(mecab_t*, const mecab_node_t*)</code><br>
	 * <i>native declaration : line 472</i>
	 */
	public static native Pointer<Byte > mecab_format_node(Pointer<MecabLibrary.mecab_t > mecab, Pointer<mecab_node_t > node);
	/**
	 * Original signature : <code>mecab_dictionary_info_t* mecab_dictionary_info(mecab_t*)</code><br>
	 * <i>native declaration : line 477</i>
	 */
	public static native Pointer<mecab_dictionary_info_t > mecab_dictionary_info(Pointer<MecabLibrary.mecab_t > mecab);
	/**
	 * Original signature : <code>mecab_lattice_t* mecab_lattice_new()</code><br>
	 * <i>native declaration : line 483</i>
	 */
	public static native Pointer<MecabLibrary.mecab_lattice_t > mecab_lattice_new();
	/**
	 * Original signature : <code>void mecab_lattice_destroy(mecab_lattice_t*)</code><br>
	 * <i>native declaration : line 488</i>
	 */
	public static native void mecab_lattice_destroy(Pointer<MecabLibrary.mecab_lattice_t > lattice);
	/**
	 * Original signature : <code>void mecab_lattice_clear(mecab_lattice_t*)</code><br>
	 * <i>native declaration : line 493</i>
	 */
	public static native void mecab_lattice_clear(Pointer<MecabLibrary.mecab_lattice_t > lattice);
	/**
	 * Original signature : <code>int mecab_lattice_is_available(mecab_lattice_t*)</code><br>
	 * <i>native declaration : line 499</i>
	 */
	public static native int mecab_lattice_is_available(Pointer<MecabLibrary.mecab_lattice_t > lattice);
	/**
	 * Original signature : <code>mecab_node_t* mecab_lattice_get_bos_node(mecab_lattice_t*)</code><br>
	 * <i>native declaration : line 504</i>
	 */
	public static native Pointer<mecab_node_t > mecab_lattice_get_bos_node(Pointer<MecabLibrary.mecab_lattice_t > lattice);
	/**
	 * Original signature : <code>mecab_node_t* mecab_lattice_get_eos_node(mecab_lattice_t*)</code><br>
	 * <i>native declaration : line 509</i>
	 */
	public static native Pointer<mecab_node_t > mecab_lattice_get_eos_node(Pointer<MecabLibrary.mecab_lattice_t > lattice);
	/**
	 * Original signature : <code>mecab_node_t** mecab_lattice_get_all_begin_nodes(mecab_lattice_t*)</code><br>
	 * <i>native declaration : line 515</i>
	 */
	public static native Pointer<Pointer<mecab_node_t > > mecab_lattice_get_all_begin_nodes(Pointer<MecabLibrary.mecab_lattice_t > lattice);
	/**
	 * Original signature : <code>mecab_node_t** mecab_lattice_get_all_end_nodes(mecab_lattice_t*)</code><br>
	 * <i>native declaration : line 519</i>
	 */
	public static native Pointer<Pointer<mecab_node_t > > mecab_lattice_get_all_end_nodes(Pointer<MecabLibrary.mecab_lattice_t > lattice);
	/**
	 * Original signature : <code>mecab_node_t* mecab_lattice_get_begin_nodes(mecab_lattice_t*, size_t)</code><br>
	 * <i>native declaration : line 524</i>
	 */
	public static native Pointer<mecab_node_t > mecab_lattice_get_begin_nodes(Pointer<MecabLibrary.mecab_lattice_t > lattice, @Ptr long pos);
	/**
	 * Original signature : <code>mecab_node_t* mecab_lattice_get_end_nodes(mecab_lattice_t*, size_t)</code><br>
	 * <i>native declaration : line 529</i>
	 */
	public static native Pointer<mecab_node_t > mecab_lattice_get_end_nodes(Pointer<MecabLibrary.mecab_lattice_t > lattice, @Ptr long pos);
	/**
	 * Original signature : <code>char* mecab_lattice_get_sentence(mecab_lattice_t*)</code><br>
	 * <i>native declaration : line 534</i>
	 */
	public static native Pointer<Byte > mecab_lattice_get_sentence(Pointer<MecabLibrary.mecab_lattice_t > lattice);
	/**
	 * Original signature : <code>void mecab_lattice_set_sentence(mecab_lattice_t*, const char*)</code><br>
	 * <i>native declaration : line 539</i>
	 */
	public static native void mecab_lattice_set_sentence(Pointer<MecabLibrary.mecab_lattice_t > lattice, Pointer<Byte > sentence);
	/**
	 * Original signature : <code>void mecab_lattice_set_sentence2(mecab_lattice_t*, const char*, size_t)</code><br>
	 * <i>native declaration : line 545</i>
	 */
	public static native void mecab_lattice_set_sentence2(Pointer<MecabLibrary.mecab_lattice_t > lattice, Pointer<Byte > sentence, @Ptr long len);
	/**
	 * Original signature : <code>size_t mecab_lattice_get_size(mecab_lattice_t*)</code><br>
	 * <i>native declaration : line 550</i>
	 */
	@Ptr
	public static native long mecab_lattice_get_size(Pointer<MecabLibrary.mecab_lattice_t > lattice);
	/**
	 * Original signature : <code>double mecab_lattice_get_z(mecab_lattice_t*)</code><br>
	 * <i>native declaration : line 555</i>
	 */
	public static native double mecab_lattice_get_z(Pointer<MecabLibrary.mecab_lattice_t > lattice);
	/**
	 * Original signature : <code>void mecab_lattice_set_z(mecab_lattice_t*, double)</code><br>
	 * <i>native declaration : line 560</i>
	 */
	public static native void mecab_lattice_set_z(Pointer<MecabLibrary.mecab_lattice_t > lattice, double Z);
	/**
	 * Original signature : <code>double mecab_lattice_get_theta(mecab_lattice_t*)</code><br>
	 * <i>native declaration : line 565</i>
	 */
	public static native double mecab_lattice_get_theta(Pointer<MecabLibrary.mecab_lattice_t > lattice);
	/**
	 * Original signature : <code>void mecab_lattice_set_theta(mecab_lattice_t*, double)</code><br>
	 * <i>native declaration : line 571</i>
	 */
	public static native void mecab_lattice_set_theta(Pointer<MecabLibrary.mecab_lattice_t > lattice, double theta);
	/**
	 * Original signature : <code>int mecab_lattice_next(mecab_lattice_t*)</code><br>
	 * <i>native declaration : line 576</i>
	 */
	public static native int mecab_lattice_next(Pointer<MecabLibrary.mecab_lattice_t > lattice);
	/**
	 * Original signature : <code>int mecab_lattice_get_request_type(mecab_lattice_t*)</code><br>
	 * <i>native declaration : line 581</i>
	 */
	public static native int mecab_lattice_get_request_type(Pointer<MecabLibrary.mecab_lattice_t > lattice);
	/**
	 * Original signature : <code>int mecab_lattice_has_request_type(mecab_lattice_t*, int)</code><br>
	 * <i>native declaration : line 586</i>
	 */
	public static native int mecab_lattice_has_request_type(Pointer<MecabLibrary.mecab_lattice_t > lattice, int request_type);
	/**
	 * Original signature : <code>void mecab_lattice_set_request_type(mecab_lattice_t*, int)</code><br>
	 * <i>native declaration : line 591</i>
	 */
	public static native void mecab_lattice_set_request_type(Pointer<MecabLibrary.mecab_lattice_t > lattice, int request_type);
	/**
	 * Original signature : <code>void mecab_lattice_add_request_type(mecab_lattice_t*, int)</code><br>
	 * <i>native declaration : line 597</i>
	 */
	public static native void mecab_lattice_add_request_type(Pointer<MecabLibrary.mecab_lattice_t > lattice, int request_type);
	/**
	 * Original signature : <code>void mecab_lattice_remove_request_type(mecab_lattice_t*, int)</code><br>
	 * <i>native declaration : line 602</i>
	 */
	public static native void mecab_lattice_remove_request_type(Pointer<MecabLibrary.mecab_lattice_t > lattice, int request_type);
	/**
	 * Original signature : <code>mecab_node_t* mecab_lattice_new_node(mecab_lattice_t*)</code><br>
	 * <i>native declaration : line 607</i>
	 */
	public static native Pointer<mecab_node_t > mecab_lattice_new_node(Pointer<MecabLibrary.mecab_lattice_t > lattice);
	/**
	 * Original signature : <code>char* mecab_lattice_tostr(mecab_lattice_t*)</code><br>
	 * <i>native declaration : line 612</i>
	 */
	public static native Pointer<Byte > mecab_lattice_tostr(Pointer<MecabLibrary.mecab_lattice_t > lattice);
	/**
	 * Original signature : <code>char* mecab_lattice_tostr2(mecab_lattice_t*, char*, size_t)</code><br>
	 * <i>native declaration : line 617</i>
	 */
	public static native Pointer<Byte > mecab_lattice_tostr2(Pointer<MecabLibrary.mecab_lattice_t > lattice, Pointer<Byte > buf, @Ptr long size);
	/**
	 * Original signature : <code>char* mecab_lattice_nbest_tostr(mecab_lattice_t*, size_t)</code><br>
	 * <i>native declaration : line 622</i>
	 */
	public static native Pointer<Byte > mecab_lattice_nbest_tostr(Pointer<MecabLibrary.mecab_lattice_t > lattice, @Ptr long N);
	/**
	 * Original signature : <code>char* mecab_lattice_nbest_tostr2(mecab_lattice_t*, size_t, char*, size_t)</code><br>
	 * <i>native declaration : line 628</i>
	 */
	public static native Pointer<Byte > mecab_lattice_nbest_tostr2(Pointer<MecabLibrary.mecab_lattice_t > lattice, @Ptr long N, Pointer<Byte > buf, @Ptr long size);
	/**
	 * Original signature : <code>int mecab_lattice_has_constraint(mecab_lattice_t*)</code><br>
	 * <i>native declaration : line 633</i>
	 */
	public static native int mecab_lattice_has_constraint(Pointer<MecabLibrary.mecab_lattice_t > lattice);
	/**
	 * Original signature : <code>int mecab_lattice_get_boundary_constraint(mecab_lattice_t*, size_t)</code><br>
	 * <i>native declaration : line 638</i>
	 */
	public static native int mecab_lattice_get_boundary_constraint(Pointer<MecabLibrary.mecab_lattice_t > lattice, @Ptr long pos);
	/**
	 * Original signature : <code>char* mecab_lattice_get_feature_constraint(mecab_lattice_t*, size_t)</code><br>
	 * <i>native declaration : line 644</i>
	 */
	public static native Pointer<Byte > mecab_lattice_get_feature_constraint(Pointer<MecabLibrary.mecab_lattice_t > lattice, @Ptr long pos);
	/**
	 * Original signature : <code>void mecab_lattice_set_boundary_constraint(mecab_lattice_t*, size_t, int)</code><br>
	 * <i>native declaration : line 649</i>
	 */
	public static native void mecab_lattice_set_boundary_constraint(Pointer<MecabLibrary.mecab_lattice_t > lattice, @Ptr long pos, int boundary_type);
	/**
	 * Original signature : <code>void mecab_lattice_set_feature_constraint(mecab_lattice_t*, size_t, size_t, const char*)</code><br>
	 * <i>native declaration : line 654</i>
	 */
	public static native void mecab_lattice_set_feature_constraint(Pointer<MecabLibrary.mecab_lattice_t > lattice, @Ptr long begin_pos, @Ptr long end_pos, Pointer<Byte > feature);
	/**
	 * Original signature : <code>void mecab_lattice_set_result(mecab_lattice_t*, const char*)</code><br>
	 * <i>native declaration : line 659</i>
	 */
	public static native void mecab_lattice_set_result(Pointer<MecabLibrary.mecab_lattice_t > lattice, Pointer<Byte > result);
	/**
	 * Original signature : <code>char* mecab_lattice_strerror(mecab_lattice_t*)</code><br>
	 * <i>native declaration : line 664</i>
	 */
	public static native Pointer<Byte > mecab_lattice_strerror(Pointer<MecabLibrary.mecab_lattice_t > lattice);
	/**
	 * Original signature : <code>mecab_model_t* mecab_model_new(int, char**)</code><br>
	 * <i>native declaration : line 671</i>
	 */
	public static native Pointer<MecabLibrary.mecab_model_t > mecab_model_new(int argc, Pointer<Pointer<Byte > > argv);
	/**
	 * Original signature : <code>mecab_model_t* mecab_model_new2(const char*)</code><br>
	 * <i>native declaration : line 676</i>
	 */
	public static native Pointer<MecabLibrary.mecab_model_t > mecab_model_new2(Pointer<Byte > arg);
	/**
	 * Original signature : <code>void mecab_model_destroy(mecab_model_t*)</code><br>
	 * <i>native declaration : line 682</i>
	 */
	public static native void mecab_model_destroy(Pointer<MecabLibrary.mecab_model_t > model);
	/**
	 * Original signature : <code>mecab_t* mecab_model_new_tagger(mecab_model_t*)</code><br>
	 * <i>native declaration : line 687</i>
	 */
	public static native Pointer<MecabLibrary.mecab_t > mecab_model_new_tagger(Pointer<MecabLibrary.mecab_model_t > model);
	/**
	 * Original signature : <code>mecab_lattice_t* mecab_model_new_lattice(mecab_model_t*)</code><br>
	 * <i>native declaration : line 692</i>
	 */
	public static native Pointer<MecabLibrary.mecab_lattice_t > mecab_model_new_lattice(Pointer<MecabLibrary.mecab_model_t > model);
	/**
	 * Original signature : <code>int mecab_model_swap(mecab_model_t*, mecab_model_t*)</code><br>
	 * <i>native declaration : line 697</i>
	 */
	public static native int mecab_model_swap(Pointer<MecabLibrary.mecab_model_t > model, Pointer<MecabLibrary.mecab_model_t > new_model);
	/**
	 * Original signature : <code>mecab_dictionary_info_t* mecab_model_dictionary_info(mecab_model_t*)</code><br>
	 * <i>native declaration : line 702</i>
	 */
	public static native Pointer<mecab_dictionary_info_t > mecab_model_dictionary_info(Pointer<MecabLibrary.mecab_model_t > model);
	/**
	 * Original signature : <code>int mecab_model_transition_cost(mecab_model_t*, unsigned short, unsigned short)</code><br>
	 * <i>native declaration : line 707</i>
	 */
	public static native int mecab_model_transition_cost(Pointer<MecabLibrary.mecab_model_t > model, short rcAttr, short lcAttr);
	/**
	 * Original signature : <code>mecab_node_t* mecab_model_lookup(mecab_model_t*, const char*, const char*, mecab_lattice_t*)</code><br>
	 * <i>native declaration : line 714</i>
	 */
	public static native Pointer<mecab_node_t > mecab_model_lookup(Pointer<MecabLibrary.mecab_model_t > model, Pointer<Byte > begin, Pointer<Byte > end, Pointer<MecabLibrary.mecab_lattice_t > lattice);
	/** Undefined type */
	public static interface mecab_t {

	};
	/** Undefined type */
	public static interface mecab_model_t {

	};
	/** Undefined type */
	public static interface mecab_lattice_t {

	};
}
